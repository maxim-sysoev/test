// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

class PanTompkinsBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  PanTompkinsBindings(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  PanTompkinsBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) lookup)
      : _lookup = lookup;

  void panTompkins() {
    return _panTompkins();
  }

  late final _panTompkinsPtr = _lookup<ffi.NativeFunction<ffi.Void Function()>>('panTompkins');
  late final _panTompkins = _panTompkinsPtr.asFunction<void Function()>();

  void init(
    ffi.Pointer<ffi.Char> file_in,
    ffi.Pointer<ffi.Char> file_out,
  ) {
    return _init(
      file_in,
      file_out,
    );
  }

  late final _initPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>>(
          'init');
  late final _init =
      _initPtr.asFunction<void Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>();
}

abstract class bool {
  static const int false1 = 0;
  static const int true1 = 1;
}
